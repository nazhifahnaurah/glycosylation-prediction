library(protr)
PosBenchMark_O<-read.csv("D:/BioMedik/Datasets Glycomine/PosBenchMark_O.txt", header = FALSE, sep="\t")
windows=15;
jumlah_seq=1
seq_iter=array()
sink('output_PosBenchMark_O.fasta')
for(j in 1:nrow(PosBenchMark_O)){
prots<-getUniProt(PosBenchMark_O[j,2])
start=PosBenchMark_O[j,3]-((windows-1)/2)
end=PosBenchMark_O[j,3]+((windows-1)/2)
sq=substr(prots[[1]],start,end)
#print(sq)
#print(paste("",seq))
if(nchar(sq)==windows){
cat(paste('>',PosBenchMark_O[j,2],PosBenchMark_O[j,3],'\n'))
cat(paste(sq,'\n'))
seq_iter[jumlah_seq]=sq
jumlah_seq=jumlah_seq+1
}
}
sink()
library(protr)
PosBenchMark_O<-read.csv("D:/BioMedik/Datasets Glycomine/PosBenchMark_O.txt", header = FALSE, sep="\t")
windows=15;
jumlah_seq=1
seq_iter=array()
sink('PosBenchMark_O.fasta')
for(j in 1:nrow(PosBenchMark_O)){
prots<-getUniProt(PosBenchMark_O[j,2])
start=PosBenchMark_O[j,3]-((windows-1)/2)
end=PosBenchMark_O[j,3]+((windows-1)/2)
sq=substr(prots[[1]],start,end)
#print(sq)
#print(paste("",seq))
if(nchar(sq)==windows){
cat(paste(sq,'\n'))
seq_iter[jumlah_seq]=sq
jumlah_seq=jumlah_seq+1
}
}
sink()
library(BiocManager)
detach("package:BiocManager", unload = TRUE)
library(BioSeqClass)
library(Biostrings)
#AAindex
if (interactive()) {
file = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq  = as.matrix(read.csv(file, header = F)) [,1]
AI_all = featureAAindex(seq)
AI_pos = featureAAindex(seq, "ANDN920101")
ACI_all = featureACI(seq)
ACI_ANDN920101 = featureACI(seq,"ANDN920101")
ACF_all = featureACF(seq,1)
ACF_ANDN920101 = featureACF(seq,3,"ANDN920101")
}
data_PosBenchMark_O<-read.csv("D:/BioMedik/PosBenchMark_O/PosBenchMark_O.csv", header = TRUE, sep=";")
View(data_PosBenchMark_O)
data=cbind(data_PosBenchMark_O,AI_neg)
print(data)
if (interactive()) {
file = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq  = as.matrix(read.csv(file, header = F)) [,1]
AI_pos = featureAAindex(seq, "ANDN920101")
}
library(BioSeqClass)
library(Biostrings)
if (interactive()) {
file = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq  = as.matrix(read.csv(file, header = F)) [,1]
AI_pos = featureAAindex(seq, "ANDN920101")
}
View(AI_pos)
data=cbind(data_PosBenchMark_O,AI_pos)
print(data)
if (interactive()) {
file = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq  = as.matrix(read.csv(file, header = F)) [,1]
AI_pos = featureAAindex(seq, "ANDN920101") [,-16]
}
View(AI_pos)
data=cbind(data_PosBenchMark_O,AI_pos)
print(data)
View(data)
data=cbind(data_PosBenchMark_O,AI_pos)[,-1]
print(data)
write.csv(dataset, file = "PosBenchMark_O.csv",row.names = TRUE)
write.csv(data, file = "PosBenchMark_O.csv",row.names = TRUE)
write.csv(data, file = "Pos_BenchMark_O.csv",row.names = TRUE)
library(protr)
PosBenchMark_O<-read.csv("D:/BioMedik/Datasets Glycomine/PosBenchMark_O.txt", header = FALSE, sep="\t")
windows=15;
jumlah_seq=1
seq_iter=array()
sink('PosBenchMark_O.fasta')
for(j in 1:nrow(PosBenchMark_O)){
prots<-getUniProt(PosBenchMark_O[j,2])
start=PosBenchMark_O[j,3]-((windows-1)/2)
end=PosBenchMark_O[j,3]+((windows-1)/2)
sq=substr(prots[[1]],start,end)
#print(sq)
#print(paste("",seq))
if(nchar(sq)==windows){
cat(paste(sq,'\n'))
seq_iter[jumlah_seq]=sq
jumlah_seq=jumlah_seq+1
}
}
sink()
library(protr)
PosBenchMark_O<-read.csv("D:/BioMedik/Datasets Glycomine/PosBenchMark_O.txt", header = FALSE, sep="\t")
windows=15;
jumlah_seq=1
seq_iter=array()
sink('PosBenchMark_O.fasta')
for(j in 1:nrow(PosBenchMark_O)){
prots<-getUniProt(PosBenchMark_O[j,2])
start=PosBenchMark_O[j,3]-((windows-1)/2)
end=PosBenchMark_O[j,3]+((windows-1)/2)
sq=substr(prots[[1]],start,end)
#print(sq)
#print(paste("",seq))
if(nchar(sq)==windows){
cat(paste(sq,'\n'))
seq_iter[jumlah_seq]=sq
jumlah_seq=jumlah_seq+1
}
}
library(protr)
PosBenchMark_O<-read.csv("D:/BioMedik/Datasets Glycomine/PosBenchMark_O.txt", header = FALSE, sep="\t")
windows=15;
jumlah_seq=1
seq_iter=array()
sink('PosBenchMark_O.fasta')
for(j in 1:nrow(PosBenchMark_O)){
prots<-getUniProt(PosBenchMark_O[j,2])
start=PosBenchMark_O[j,3]-((windows-1)/2)
end=PosBenchMark_O[j,3]+((windows-1)/2)
sq=substr(prots[[1]],start,end)
#print(sq)
#print(paste("",seq))
if(nchar(sq)==windows){
cat(paste(sq,'\n'))
seq_iter[jumlah_seq]=sq
jumlah_seq=jumlah_seq+1
}
}
sink()
library(protr)
PosBenchMark_O<-read.csv("D:/BioMedik/Datasets Glycomine/PosBenchMark_O.txt", header = FALSE, sep="\t")
windows=15;
jumlah_seq=1
seq_iter=array()
sink('PosBenchMark_O.fasta')
for(j in 1:nrow(PosBenchMark_O)){
prots<-getUniProt(PosBenchMark_O[j,2])
start=PosBenchMark_O[j,3]-((windows-1)/2)
end=PosBenchMark_O[j,3]+((windows-1)/2)
sq=substr(prots[[1]],start,end)
#print(sq)
#print(paste("",seq))
if(nchar(sq)==windows){
cat(paste(sq,'\n'))
seq_iter[jumlah_seq]=sq
jumlah_seq=jumlah_seq+1
}
}
sink()
if (interactive()) {
file = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq  = as.matrix(read.csv(file, header = F)) [,1]
AI_pos = featureAAindex(seq, "ANDN920101") [,-16]
}
library(BioSeqClass)
library(Biostrings)
if (interactive()) {
file = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq  = as.matrix(read.csv(file, header = F)) [,1]
AI_pos = featureAAindex(seq, "ANDN920101") [,-16]
}
#CTD  posative
if (interactive()) {
file_pos1 = file.path(path.package("BioSeqClass"), "example", "output_PosBenchMark_O.fasta")
tmp_pos = readAAStringSet(file_pos1)
proteinSeq_pos = as.character(tmp_pos)
#CTD1_pos = featureCTD(proteinSeq_pos, class = elements("aminoacid"))
CTD2_pos = featureCTD(proteinSeq_pos, class = aaClass("aaV"))[,-22:-26]
CTD2_pos[is.na(CTD2_pos)] <- 0
}
if (interactive()) {
file_pos2 = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq1_pos = as.matrix(read.csv(file_pos2, header = F))[,1]
H1_pos = featureHydro(seq1_pos, "kpm")[,-16]
}
if(interactive()){
file_pos3 = file.path(path.package("BioSeqClass"), "example", "PosBenchMark_O.pep")
seq2_pos = as.matrix(read.csv(file_pos3,header=F, sep = ""))
PAC4_pos = featurePseudoAAComp(seq2_pos,4)
}
data_PosBenchMark_O<-read.csv("D:/BioMedik/PosBenchMark_O/PosBenchMark_O.csv", header = TRUE, sep=";")
data_pos=cbind(data_PosBenchMark_N,AI_pos,CTD2_pos,H1_pos,PAC4_pos)[,-1]
data_pos=cbind(data_PosBenchMark_O,AI_pos,CTD2_pos,H1_pos,PAC4_pos)[,-1]
print(data_pos)
write.csv(data_pos, file = "Pos_BenchMark_O.csv",row.names = TRUE)
View(PosBenchMark_O)
View(data_pos)
